using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Runtime.InteropServices;

namespace WPGViewer
{
    public partial class Form1 : Form
    {
        // contains the encrypted file data
        private static byte[] EncryptedFile = {
            0x42, 0x03, 0x00, 0x00, 0xD6, 0xDB, 0xB5, 0x21, 0xA6, 0xCC, 0x25, 0x9E, 0xD1, 0xEA, 0xCA, 0xF0,
            0x9A, 0xCD, 0xF2, 0xDA, 0x01, 0x94, 0x3C, 0x99, 0x0B, 0x35, 0x51, 0xB5, 0xC5, 0x4F, 0x26, 0x2F,
            0x35, 0x5A, 0x47, 0x95, 0xE5, 0xBE, 0xC0, 0x78, 0xE2, 0xE8, 0x2F, 0x37, 0xE2, 0xBB, 0x91, 0x35,
            0xAB, 0xD6, 0xD2, 0x42, 0x7D, 0x95, 0x7C, 0x3D, 0x85, 0x95, 0xE2, 0x65, 0x1C, 0x96, 0xE7, 0x46,
            0xB1, 0x70, 0x73, 0x71, 0x0A, 0xAC, 0x35, 0xFC, 0xF8, 0xA0, 0x87, 0x53, 0x03, 0xA0, 0x6E, 0x48,
            0x85, 0x45, 0xCA, 0xAD, 0x28, 0x2F, 0x6F, 0x91, 0xC1, 0xAD, 0x8C, 0x41, 0xA9, 0x54, 0x33, 0x57,
            0x58, 0xC1, 0xFE, 0x0C, 0x63, 0xE6, 0x4A, 0x29, 0x0A, 0x57, 0x20, 0xBC, 0x21, 0x90, 0xC6, 0x13,
            0x90, 0x96, 0x4C, 0xF2, 0x96, 0x0B, 0xB8, 0x55, 0x6E, 0x77, 0x19, 0x97, 0xD7, 0x9E, 0x5B, 0x26,
            0xDC, 0x44, 0x9D, 0xFD, 0x3D, 0x14, 0x0E, 0xAB, 0xAF, 0x8F, 0x11, 0x6C, 0x08, 0x30, 0x64, 0x22,
            0xFF, 0xF1, 0x73, 0x92, 0x0B, 0x4D, 0x6D, 0xA4, 0x2A, 0x64, 0xBA, 0xBC, 0xFF, 0x0A, 0xA7, 0xD6,
            0x4F, 0x69, 0xB3, 0x46, 0xF3, 0xC3, 0xE1, 0xA5, 0x7C, 0x4A, 0xAA, 0x44, 0xE1, 0xD6, 0x7E, 0xE1,
            0x5B, 0x72, 0x53, 0xC2, 0x15, 0xFA, 0x02, 0x17, 0xDF, 0xEE, 0x3A, 0xD6, 0xE2, 0x79, 0x49, 0xC6,
            0x5B, 0x19, 0x57, 0xE2, 0x4B, 0x3B, 0xDD, 0xD4, 0x99, 0x93, 0xBF, 0x0C, 0x0A, 0x4C, 0x48, 0x96,
            0x90, 0x5A, 0x35, 0x44, 0x9E, 0x2B, 0x38, 0x0A, 0x23, 0xF0, 0xC9, 0x1B, 0x45, 0x56, 0x52, 0xC2,
            0x2B, 0xFB, 0x5C, 0x4A, 0x9C, 0x88, 0x4E, 0x75, 0xEF, 0x3D, 0xF4, 0x1E, 0x79, 0x3E, 0x84, 0x91,
            0xF4, 0xB4, 0x59, 0xA8, 0x02, 0xF2, 0xA7, 0x6B, 0xBE, 0x6E, 0xAA, 0x99, 0x80, 0x2C, 0x9E, 0xC5,
            0xD9, 0x7E, 0xE9, 0x59, 0x4E, 0x5F, 0x84, 0x21, 0xE5, 0xFE, 0x9E, 0x92, 0xEA, 0x65, 0x16, 0x34,
            0xF5, 0x47, 0xE9, 0x38, 0x08, 0xE6, 0xAD, 0x84, 0x43, 0x8F, 0x5B, 0xB3, 0xC3, 0x9E, 0x2C, 0x68,
            0x0F, 0x80, 0xF0, 0xF2, 0xFC, 0x83, 0x35, 0x14, 0x98, 0xFF, 0x22, 0x3A, 0xA0, 0x74, 0x2A, 0xD6,
            0x13, 0xB1, 0x54, 0x46, 0x94, 0x7A, 0x47, 0x2F, 0xA6, 0x35, 0xCD, 0x61, 0x70, 0x8F, 0x08, 0x10,
            0xD6, 0xAE, 0xAA, 0xEA, 0x1A, 0x28, 0x14, 0x6A, 0xB9, 0x70, 0xF6, 0x17, 0x5E, 0x05, 0xF7, 0xEF,
            0x5C, 0xB8, 0xB4, 0x23, 0x89, 0x99, 0x6A, 0x71, 0x46, 0x94, 0xDB, 0x7F, 0x5E, 0xBC, 0xDB, 0xD5,
            0xD4, 0xA9, 0x85, 0x61, 0xCE, 0xEF, 0xC9, 0x51, 0x74, 0x59, 0x98, 0x2A, 0xA0, 0xD8, 0x80, 0x66,
            0xFD, 0x66, 0x9B, 0xA2, 0xBC, 0x96, 0xCB, 0xB1, 0x0A, 0xEE, 0x7C, 0x46, 0xD7, 0xB5, 0xE6, 0xA0,
            0x97, 0xCE, 0x70, 0x86, 0x74, 0xD5, 0x6A, 0xCD, 0xDC, 0x37, 0x10, 0x74, 0x40, 0x18, 0xD0, 0xB7,
            0x41, 0xE9, 0x99, 0xFE, 0x2B, 0xC4, 0x9E, 0x35, 0x91, 0x35, 0x1F, 0xCC, 0xC1, 0x0B, 0x83, 0x06,
            0x60, 0x41, 0x4E, 0xB9, 0x91, 0xEB, 0x2D, 0xF0, 0xA3, 0xA9, 0x85, 0x6A, 0xF8, 0x17, 0x75, 0x8A,
            0x11, 0x2F, 0x96, 0xB8, 0xF0, 0x5F, 0xEB, 0xBD, 0xE7, 0xA0, 0x39, 0xF7, 0x91, 0x68, 0xA3, 0xFF,
            0xE4, 0x17, 0x4B, 0x01, 0x67, 0x7E, 0xE5, 0xCF, 0xFC, 0x09, 0x18, 0xC2, 0xD2, 0x18, 0x84, 0x59,
            0x87, 0x91, 0x03, 0x89, 0x05, 0x9F, 0x01, 0x9C, 0xD5, 0xB6, 0xA7, 0xE8, 0xA2, 0xC5, 0xEC, 0x2C,
            0x04, 0x51, 0x3D, 0x2B, 0x38, 0xC7, 0xFE, 0x49, 0xBA, 0x41, 0xD8, 0x7E, 0xBF, 0x21, 0x2E, 0xF4,
            0x0E, 0x30, 0xFD, 0x73, 0xA4, 0xF7, 0x95, 0xF8, 0x5B, 0x74, 0x9A, 0xD6, 0x68, 0xC4, 0x0B, 0x9D,
            0x9F, 0x57, 0x5E, 0x6A, 0xC2, 0xDA, 0x1E, 0xBD, 0x5B, 0xB5, 0xD2, 0xA1, 0xC0, 0x0F, 0xD9, 0xA4,
            0x3E, 0xF8, 0xB4, 0xBE, 0x5E, 0x74, 0xBE, 0xBA, 0x06, 0x19, 0x4C, 0x2C, 0xD3, 0xE7, 0xBA, 0x68,
            0x43, 0x30, 0x78, 0x17, 0xBE, 0x95, 0x60, 0x23, 0xD3, 0x8D, 0x0F, 0x43, 0xE3, 0xAA, 0xE9, 0xC0,
            0x84, 0xD1, 0xDA, 0xB4, 0x99, 0x7E, 0x9E, 0xB9, 0xF4, 0x68, 0x21, 0x80, 0x01, 0x9B, 0x29, 0xC6,
            0x59, 0x58, 0xC8, 0x66, 0x24, 0xBD, 0x72, 0xF8, 0x3E, 0xB0, 0x9D, 0x41, 0x5A, 0x69, 0xD0, 0xF0,
            0xA6, 0xDA, 0x22, 0x79, 0xC4, 0x43, 0xD3, 0x61, 0xBC, 0x94, 0x8A, 0x49, 0xAD, 0x96, 0x6B, 0x07,
            0x29, 0x1F, 0xA1, 0xD5, 0x39, 0x82, 0xA5, 0x3D, 0x32, 0x4C, 0x48, 0xC6, 0x22, 0x29, 0x43, 0x3E,
            0xBB, 0x55, 0xD1, 0x21, 0x05, 0x7B, 0x84, 0xBB, 0x7B, 0x13, 0x5C, 0xE5, 0x02, 0x5B, 0x52, 0xCD,
            0xE3, 0x73, 0xD4, 0x67, 0xC2, 0xFD, 0x81, 0x25, 0xDC, 0xBC, 0x64, 0x5E, 0x98, 0xD0, 0xD3, 0xE0,
            0xCB, 0x53, 0x56, 0x7E, 0xD6, 0x08, 0x17, 0xD2, 0x16, 0x35, 0xBA, 0xBD, 0x52, 0x58, 0x94, 0x91,
            0x46, 0x8C, 0xC6, 0x8C, 0x90, 0x40, 0xA9, 0xED, 0x24, 0xF8, 0x8B, 0xE0, 0x33, 0xB0, 0x52, 0x3E,
            0x8B, 0xE9, 0xD2, 0xBC, 0xAD, 0x6A, 0x3E, 0x3D, 0x1A, 0xA2, 0xB6, 0xC0, 0x7F, 0x8E, 0xF8, 0xD3,
            0xD7, 0x8C, 0xC7, 0xA7, 0xCE, 0xE1, 0x75, 0x39, 0xE1, 0x79, 0x35, 0xC5, 0xCA, 0xFE, 0xD2, 0xB4,
            0x38, 0xE8, 0xA1, 0x95, 0x8A, 0xFB, 0xAA, 0xEE, 0xE8, 0xF5, 0x70, 0xCA, 0x29, 0x23, 0x7D, 0x8F,
            0x41, 0x3F, 0xE1, 0x7F, 0x59, 0xD3, 0x99, 0xF0, 0x65, 0x42, 0x74, 0x54, 0x50, 0xC4, 0x33, 0xD5,
            0x9C, 0x01, 0x84, 0xA5, 0xD8, 0xD9, 0xD3, 0x03, 0x8A, 0x8D, 0x28, 0x1B, 0x39, 0x6F, 0xD9, 0xB8,
            0x5A, 0x3D, 0xA0, 0x04, 0xE2, 0xD9, 0x63, 0x34, 0x3E, 0xE4, 0xCF, 0x40, 0x24, 0x74, 0x90, 0x0B,
            0xD8, 0x56, 0x4A, 0xC0, 0x1A, 0x68, 0x2C, 0xFB, 0xE3, 0x06, 0x21, 0xAA, 0xE5, 0x44, 0xD8, 0x37,
            0x42, 0xE9, 0x3F, 0x19, 0xBA, 0x39, 0xB6, 0x73, 0xF6, 0xDF, 0x34, 0xB8, 0x59, 0xBC, 0x89, 0x2F,
            0xBC, 0xEE, 0xB3, 0x0E, 0x6C, 0x36, 0x2C, 0x19, 0x2D, 0x99, 0x64, 0x2A, 0xC0, 0x00, 0x55, 0x09,
            0x03, 0xD8, 0x5D, 0xB0, 0x4F, 0x62, 0x0D, 0x0D, 0x70, 0x5F, 0x6F, 0xFE, 0x67, 0xDC, 0x32, 0xDA,
            0x44, 0xA0, 0xC7, 0x35
        };

        public Form1()
        {
            InitializeComponent();
        }

        private void OpenButton_Click(object sender, EventArgs e)
        {
            // creates a new file stream object
            // Stream BinaryStream = null;
            // creates a new file dialog
            OpenFileDialog FileDialog = new OpenFileDialog();
            // openFileDialog.InitialDirectory = "c:\\";
            // sets the filter to wpg files only
            FileDialog.Filter = "wpg files (*.wpg)|*.wpg";
            // FileDialog.RestoreDirectory = true;
            // shows the dialog to the user and waits
            if (FileDialog.ShowDialog() == DialogResult.OK)
            {
                // stores the first decryption block
                IntPtr File = Marshal.AllocHGlobal(EncryptedFile.Length);
                // gets the first decryption block
                Marshal.Copy(EncryptedFile, 0, File, EncryptedFile.Length);

                File += 4;

                Console.WriteLine(Decryptor.Decrypt(File, EncryptedFile.Length - 4));
                // gets a binary stream of the file
                // Stream BinaryStream = FileDialog.OpenFile();
                // opens the package
                //Package Package = new Package(FileDialog.FileName);
                // validates the number of files
                //if (Package.Count > 0)
                //{
                    // iterates through the package files
                    //foreach (File File in Package.Files)
                    //{

                    //}
                //}
            }
        }
    }
}
